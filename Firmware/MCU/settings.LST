C166 COMPILER V7.53.0.0, SETTINGS                                                          07/18/2016 16:07:47 PAGE 1   


C166 COMPILER V7.53.0.0, COMPILATION OF MODULE SETTINGS
OBJECT MODULE PLACED IN settings.OBJ
COMPILER INVOKED BY: C:\Keil\C166\BIN\C166.EXE settings.c BROWSE MOD167 DEBUG TABS(2) 

 stmt lvl     source

    1         #include "settings.h"
    2         #include "flash.h"
    3         
    4         tSettings MainSettings;
    5         
    6         void  SETTINGS_Init()
    7         {
    8  1      
    9  1        if(SETTINGS_Load())
   10  1          printf("Load OK\n");
   11  1        else
   12  1        {
   13  2          SETTINGS_Default();
   14  2          SETTINGS_Save();
   15  2          printf("Settngs default\n");
   16  2        }
   17  1      }
   18         
   19         void  SETTINGS_Default()
   20         {
   21  1        int i = 0;
   22  1        
   23  1        for(i = 0;i<FACTORS_COUNT;i++){
   24  2          MainSettings.fFactor[i] = 1.5f;
   25  2        }
   26  1        
   27  1        MainSettings.fDeadTime = 0.004f;
   28  1        MainSettings.uLimitMin = 10;
   29  1        MainSettings.uLimitMax = 1480;
   30  1        
   31  1      }
   32         void  SETTINGS_Save()
   33         {
   34  1        int i = 0,addr_counter = 0;
   35  1        
   36  1         uint16  *pSettings = (tSettings*)&MainSettings;
   37  1         uint16 sizeSettings = sizeof(MainSettings);
   38  1        
   39  1         uint16 chkSum = 0;
   40  1        
   41  1         for(i = 0;i<sizeSettings >> 1;i++)
   42  1            chkSum += *(pSettings + i);
   43  1        
   44  1        FLASH_EraseSector(0x22000);
   45  1        FLASH_FSRControl();
   46  1        
   47  1        FLASH_WriteWord(0x22000,chkSum);
   48  1        FLASH_FSRControl();
   49  1        
   50  1        for(i = 0;i<sizeSettings;i+=2)
   51  1        {
   52  2          FLASH_WriteWord(0x22002 + i,*(pSettings + addr_counter));
   53  2          FLASH_FSRControl();
   54  2          
   55  2      
C166 COMPILER V7.53.0.0, SETTINGS                                                          07/18/2016 16:07:47 PAGE 2   

   56  2          addr_counter++;
   57  2        }
   58  1      }
   59         uint8 SETTINGS_Load()
   60         {
   61  1        int i = 0;
   62  1        unsigned int far *addressChkSum = (unsigned int far *) 0x022000;
   63  1        unsigned int far *addressData = (unsigned int far *) 0x022002;
   64  1        
   65  1        uint16  *pSettings = (tSettings*)&MainSettings;
   66  1        uint16  dataSize = sizeof(MainSettings);
   67  1        uint16  chkSum = 0;
   68  1        
   69  1        for(i = 0;i<dataSize >> 1;i++){
   70  2          chkSum += *(addressData + i);
   71  2      
   72  2        }
   73  1      
   74  1        if(chkSum != *addressChkSum)
   75  1          return 0;
   76  1        
   77  1        
   78  1        for(i = 0;i<dataSize >> 1;i++){
   79  2          *(pSettings + i) = *(addressData + i);
   80  2          
   81  2        }
   82  1        return 1;
   83  1      }


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         304     --------
  NEAR-CONST SIZE  =          26     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =          56     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
